{"version":3,"sources":["core/slack.service.js"],"names":[],"mappings":";;;;;;;;;;;;yBAAkB,YAAY;;;;AAE9B,IAAI,SAAS,GAAG,CAAC,WAAW,EAAE,aAAa,EAAE,WAAW,EAAE,gBAAgB,EAAE,SAAS,CAAC,CAAA;;IAEjE,YAAY;AAErB,UAFS,YAAY,CAEpB,aAAa,EAAE,MAAM,EAAE;wBAFf,YAAY;;AAI/B,MAAI,CAAC,cAAc,GAAG,aAAa,CAAC;AACpC,MAAI,CAAC,OAAO,GAAG,MAAM,CAAC;EACtB;;;;cANmB,YAAY;;SAUvB,mBAAC,GAAG,EAAC;;AAEb,UAAO,IAAI,OAAO,CAAC,UAAC,GAAG,EAAC,GAAG,EAAI;;AAE9B,QAAG;AACF,QAAG,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AAC9B,QAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;KACrB,CAAA,OAAM,CAAC,EAAC;AACR,QAAG,EAAE,CAAC;KACN;IACD,CAAC,CAAC;GACH;;;;;;SAIW,sBAAC,MAAM,EAAE,KAAK,EAAC;;;AAE1B,UAAO,IAAI,OAAO,CAAC,UAAC,GAAG,EAAC,GAAG,EAAG;;AAE7B,UAAK,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,CACnC,IAAI,CAAC,UAAC,IAAI,EAAK;;AAEf,SAAG,CAAC,IAAI,EAAC;AACR,SAAG,CAAC,kBAAkB,CAAC,CAAC;MACxB;;AAED,SAAG,KAAK,KAAK,IAAI,CAAC,aAAa,EAAC;AAC/B,SAAG,CAAC,gBAAgB,CAAC,CAAC;MACtB;;AAED,QAAG,EAAE,CAAC;KACN,CAAC,SAAM,CAAC,UAAC,GAAG,EAAG;;AAEf,QAAG,CAAC,GAAG,CAAC,CAAC;KACT,CAAC,CAAC;IACJ,CAAC,CAAC;GACH;;;;;;SAIW,sBAAC,SAAS,EAAE,OAAO,EAAE,GAAG,EAAC;;;AAElC,OAAG,CAAC,OAAO,EAAC;AACb,WAAO,uCAAqC,SAAS,CAAC,WAAW,QAAK,CAAC;IACvE;;AAED,OAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAC;;;AAE7B,SAAI,QAAQ,GAAG,4BAAW,CAAC;;AAE3B,YAAK,cAAc,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI,EAAG;;;;AAI5D,UAAG,IAAI,CAAC,kBAAkB,EAAC;;AAE1B,eAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;;AAE7C,eAAQ,CAAC,OAAO,CAAC;;AAEf,eAAO,EAAE,GAAG,GAAG,SAAS,CAAC,WAAW;AAClC,gBAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACxD,YAAI,EAAE,OAAO;QACd,EAAE,UAAC,GAAG,EAAE,QAAQ,EAAK;;AAEpB,eAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACvB,CAAC,CAAC;OACH;MACD,CAAC,CAAC;;IACH,MAAM;AACN,OAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC7B,WAAO;IACP;GACD;;;QAnFmB,YAAY;;;qBAAZ,YAAY","file":"slack.service.js","sourcesContent":["import Slack from 'slack-node';\n\nvar BOT_NAMES = [\"kamrmabot\", \"karmapolice\", \"karmathot\", \"karmachameleon\", \"kakarot\"]\n\nexport default class SlackService {\n\t\n\tconstructor(configService, config) {\n\t\t\n\t\tthis._configService = configService;\n\t\tthis._config = config;\n\t}\n\t\n\t//Parse json data\n\t\n\tparseJson(str){\t\n\t\t\t\n\t\treturn new Promise((res,rej) =>{\n\n\t\t\ttry{\n\t\t\t\tstr = str.replace(/\\\\\"/g, '');\n\t\t\t\tres(JSON.parse(str));\n\t\t\t}catch(e){\n\t\t\t\trej();\n\t\t\t}\n\t\t});\n\t}\n\t\n\t//Authenticate request\n\t\n\tauthenticate(teamId, token){\n\n\t\treturn new Promise((res,rej)=>{\n\t\n\t\t\tthis._configService.getConfig(teamId)\n\t\t\t\t.then((data) => {\n\t\n\t\t\t\t\tif(!data){\n\t\t\t\t\t\trej(\"No config found.\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif(token !== data.outgoingToken){\n\t\t\t\t\t\trej(\"Invalid token.\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tres();\t\t\t\t\n\t\t\t\t}).catch((err)=>{\n\t\n\t\t\t\t\trej(err);\n\t\t\t\t});\n\t\t});\n\t}\n\t\n\t//Send slack response\n\t\n\tsendResponse(slackData, message, res){\n\t  \n\t  \tif(!message){\n\t\t\tmessage = `Invalid Command. For help see; ${slackData.triggerWord}: ?`;\n\t\t}\n\t\t\n\t\tif(this._config.productionEnv){\n\t\t\t\n\t\t\tlet slackRes = new Slack();\n\t\t\t\n\t\t\tthis._configService.getConfig(slackData.teamId).then((data)=>{\n\t\t\t\t\n\t\t\t\t//data.incomingWebhookUrl = \"https://hooks.slack.com/services/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\";\n\t\t\t\t\n\t\t\t\tif(data.incomingWebhookUrl){\n\t\t\t\t\t\n\t\t\t\t\tslackRes.setWebhook(data.incomingWebhookUrl);\n\t\t\t\t\n\t\t\t\t\tslackRes.webhook({\n\t\t\t\t\t\t\n\t\t\t\t\t  channel: \"#\" + slackData.channelName,\n\t\t\t\t\t    username: NAMES[Math.foor(Math.random()*NAMES.length)],\n\t\t\t\t\t  text: message\n\t\t\t\t\t}, (err, response) => {\n\t\t\t\t\t\t\n\t\t\t\t\t  console.log(response);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tres.send(message.toString());\n\t\t\treturn;\n\t\t}\n\t}\n}\n"],"sourceRoot":"/home/checkroth/Documents/Projects/KarmaSlack/es6"}