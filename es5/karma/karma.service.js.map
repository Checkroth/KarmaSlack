{"version":3,"sources":["karma/karma.service.js"],"names":[],"mappings":"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","file":"karma.service.js","sourcesContent":["import KarmaModel from './karma.model.js'; \n\nexport default class KarmaService {\n\t\n\tconstructor() {\n\t\t\n\t}\n\t\n\t//Add Karma record\n\t\n\tadd(teamId, userId, fromUserId){\t\t\n\t\t\n\t\treturn new Promise((res,rej) =>{\n\t\t\t\n\t\t\treturn KarmaModel.create({\n\t\t\t\t\"teamId\": teamId,\n\t\t\t\t\"userId\": userId,\n\t\t\t\t\"fromUserId\": fromUserId\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.userCount(teamId, userId, \"increased\")\n\t\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\t\tres(data);\n\t\t\t\t\t\t}).catch((err)=>{\n\t\t\t\t\t\t\trej(`Error retrieving karma for <@${userId}>.`);\n\t\t\t\t\t\t});\n\t\t\t},()=>{\n\t\t\t\trej(`Error adding karma for <@${userId}>.`);\n\t\t\t});\n\t\t});\n\t}\n\t\n\t//Remove Karma record\n\t\n\tremove(teamId, userId, fromUserId){\n\t\t\n\t\treturn new Promise((res,rej) =>{\n\t\t\t\n\t\t\tif(userId === fromUserId){\t\t\n\t\t\t\treturn fromSelf()\n\t\t\t\t\t\t.then((data)=> res(data));\n\t\t\t}\n\t\t\t\n\t\t\treturn KarmaModel.deleteLatestPoint(teamId, userId, fromUserId)\t\n\t\t\t.then((entity) => {\n\t\t\t\tif(!entity){\n\t\t\t\t\treturn whenNoRecordFound(userId)\n\t\t\t\t\t\t\t.then((data)=> res(data));\n\t\t\t\t}\t\t\n\t\t\t\treturn this.userCount(teamId, userId, \"decreased\")\n\t\t\t\t\t\t.then((data) => res(data));\n\t\t\t}).catch(()=>{\n\t\t\t\trej(`Error removing karma for <@${userId}>.`);\n\t\t\t});\n\t\t});\n\t\t\n\t\tfunction whenNoRecordFound (userId){\n\t  \n\t\t\treturn Promise.resolve(`<@${userId}> needs some positive karma from you first.`);\n\t\t};\n\t\t\n\t\tfunction fromSelf (){\n\t\t  \n\t\t\treturn Promise.resolve(`Don't be so hard on yourself.`);\n\t\t};\n\t}\n\t\n\t//Get Karma count for user\n\t\n\tuserCount(teamId, userId, incDec){\n  \n\t\treturn new Promise((res,rej) =>{\n\t\t\tKarmaModel.getUserPoints(teamId, userId)\n\t\t\t.then((collection) => {\n\t\t\t\tvar responseText = `<@${userId}> has a karma of ${collection.length}.`; \t\t \n\t\t\n\t\t\t\tif(incDec){\n\t\t\t\t\tresponseText = `<@${userId}> has ${incDec} their karma to ${collection.length}.`;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tres(responseText);\n\t\t\t}).catch(()=>{\n\t\t\t\trej(`Error retrieving karma for <@${userId}>.`);\n\t\t\t});\n\t\t});\n\t}\n\t\n\t//Get Karma count for team\n\n\tteamCount(teamId){\n\t\t\n\t\treturn new Promise((res,rej) =>{\n\t\t\tKarmaModel.getTeamPoints(teamId)\n\t\t\t.then((collection) => {\n\t\t\t\t\n\t\t\t\tvar responseText = 'Karma Totals: \\n';\n\t\t\t\t\n\t\t\t\tfor (let user = 0, len = collection.length; user < len; user++) {\n\t\t\t\t\tlet element = collection[user];\n\t\t\t\t\tresponseText += `${user+1}. <@${element._id}> has a karma of ${element.count}. \\n`;\n\t\t\t\t}\n\t\t\t\tres(responseText);\n\t\t\t}).catch(()=>{\n\t\t\t\trej('Error retrieving karma for team.');\n\t\t\t});\n\t\t});\n\t}\n}"],"sourceRoot":"/home/checkroth/Documents/Projects/KarmaSlack/es6"}