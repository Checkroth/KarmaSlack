{"version":3,"sources":["karma/karma.model.js"],"names":[],"mappings":";;;;;;;;;;;;wBAAqB,UAAU;;;;oCACT,wBAAwB;;;;AAE9C,IAAI,WAAW,GAAG,sBAAS,MAAM,CAAC;AACjC,OAAM,EAAE,MAAM;AACd,OAAM,EAAE,MAAM;AACd,YAAW,EAAE,MAAM;CACnB,CAAC,CAAC;;IAEG,UAAU;UAAV,UAAU;wBAAV,UAAU;;;cAAV,UAAU;;SAEM,wBAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC;;;AAC1C,UAAO,IAAI,CAAC,OAAO,CAAC,EAAC,MAAM,EAAN,MAAM,EAAE,MAAM,EAAN,MAAM,EAAC,EAAE,UAAC,GAAG,EAAE,IAAI,EAAK;AACpD,QAAI,IAAI,EAAE;AACT,SAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAC3C,YAAO,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AAC/B,UAAG,GAAG,EAAE,OAAO,CAAC,GAAG,6BAA0B,MAAM,CAAG,CAAC;MACvD,CAAC,CAAC;KACH,MACI;AACJ,YAAO,MAAK,MAAM,CAAC;AAClB,cAAQ,EAAE,MAAM;AAChB,cAAQ,EAAE,MAAM;AAChB,mBAAa,EAAE,IAAI;MACnB,EAAE,UAAS,GAAG,EAAE,GAAG,EAAE;AACrB,UAAI,GAAG,EAAE,OAAO,CAAC,GAAG,4BAAyB,MAAM,qBAAgB,IAAI,CAAG,CAAA;MAC1E,CAAC,CAAC;KACH;IACD,CAAC,CAAC;GACH;;;SACmB,uBAAC,MAAM,EAAE,MAAM,EAAC;AACnC,UAAO,IAAI,CAAC,OAAO,CAAC,EAAE,MAAM,EAAN,MAAM,EAAE,MAAM,EAAN,MAAM,EAAE,CAAC,CAAC;GACxC;;;SAEmB,uBAAC,MAAM,EAAC;AAC3B,UAAO,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,EAAN,MAAM,EAAE,EAC1B;AACC,QAAI,EAAE;AACL,gBAAW,EAAE,CAAC,CAAC;KACf;IACD,EACD,UAAS,GAAG,EAAE;AACb,QAAI,GAAG,EAAE,OAAO,CAAC,GAAG,+BAA4B,MAAM,CAAG,CAAA;IACzD,CAAC,CAAC;GACJ;;;QAnCI,UAAU;;;AAsChB,WAAW,CAAC,MAAM,oCAAY,UAAU,CAAC,CAAC;;qBAE3B,sBAAS,KAAK,CAAC,OAAO,EAAE,WAAW,CAAC","file":"karma.model.js","sourcesContent":["import Mongoose from 'mongoose';\nimport LoadClass from 'mongoose-class-wrapper';\n\nvar karmaSchema = Mongoose.Schema({\n\tteamId: String,\n\tuserId: String,\t\n\tkarmaPoints: Number\n});\n\nclass KarmaModel {\n\n\tstatic changeOrCreate(teamId, userId, amnt){\n\t\treturn this.findOne({teamId, userId}, (err, user) => {\n\t\t\tif (user) {\n\t\t\t\tuser.karmaPoints = user.karmaPoints + amnt;\n\t\t\t\treturn user.save(function (err) {\n\t\t\t\t\tif(err) console.err(`Couldn't add karma to ${userId}`);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn this.create({\n\t\t\t\t\t\"teamId\": teamId,\n\t\t\t\t\t\"userId\": userId,\n\t\t\t\t\t\"karmaPoints\": amnt\n\t\t\t\t}, function(err, usr) {\n\t\t\t\t\tif (err) console.err(`Couldn't create user ${userId} with points ${amnt}`)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\tstatic getUserPoints(teamId, userId){\n\t\treturn this.findOne({ teamId, userId });\n\t}\n\t\n\tstatic getTeamPoints(teamId){\n\t\treturn this.find({ teamId },\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\tkarmaPoints: -1\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction(err) {\n\t\t\t\tif (err) console.err(`Couldn't find users for ${teamId}`)\n\t\t\t});\n\t}\n}\n\nkarmaSchema.plugin(LoadClass, KarmaModel);\n\nexport default Mongoose.model('Karma', karmaSchema);"],"sourceRoot":"/home/checkroth/Documents/Projects/KarmaSlack/es6"}