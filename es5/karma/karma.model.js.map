{"version":3,"sources":["karma/karma.model.js"],"names":[],"mappings":";;;;;;;;;;;;wBAAqB,UAAU;;;;oCACT,wBAAwB;;;;AAE9C,IAAI,WAAW,GAAG,sBAAS,MAAM,CAAC;AACjC,OAAM,EAAE,MAAM;AACd,OAAM,EAAE,MAAM;AACd,WAAU,EAAE,MAAM;AAClB,QAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAE,WAAS,IAAI,CAAC,GAAG,EAAC;CACxC,CAAC,CAAC;;IAEG,UAAU;UAAV,UAAU;wBAAV,UAAU;;;cAAV,UAAU;;SAEK,uBAAC,MAAM,EAAE,MAAM,EAAC;AACnC,UAAO,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,EAAN,MAAM,EAAE,MAAM,EAAN,MAAM,EAAE,CAAC,CAAC;GACrC;;;SAEmB,uBAAC,MAAM,EAAC;;;AAE3B,UAAO,IAAI,OAAO,CAAC,UAAC,GAAG,EAAC,GAAG,EAAI;;AAE9B,UAAK,SAAS,CAAC,CACX;AACF,WAAM,EAAE,EAAC,MAAM,EAAN,MAAM,EAAC;KAChB,EAAC;AACE,WAAM,EAAG;AACX,SAAG,EAAE,SAAS;AACd,WAAK,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE;MACf;KACJ,EACD;AACC,YAAO,EAAE;AACR,aAAO,EAAE,CAAC,CAAC;MACX;KACD,CACD,EAAE,UAAS,GAAG,EAAE,UAAU,EAAC;AAC3B,QAAG,CAAC,UAAU,CAAC,CAAC;KAChB,CAAC,CAAC;IAGH,CAAC,CAAC;GACH;;;SAEuB,2BAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAC;AACnD,UAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE,MAAM,EAAN,MAAM,EAAE,MAAM,EAAN,MAAM,EAAE,UAAU,EAAV,UAAU,EAAE,EAC3D,EAAC,IAAI,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC,EAAC,CAAC,CAAC;GAC1B;;;QAnCI,UAAU;;;AAsChB,WAAW,CAAC,MAAM,oCAAY,UAAU,CAAC,CAAC;;qBAE3B,sBAAS,KAAK,CAAC,OAAO,EAAE,WAAW,CAAC","file":"karma.model.js","sourcesContent":["import Mongoose from 'mongoose';\nimport LoadClass from 'mongoose-class-wrapper';\n\nvar karmaSchema = Mongoose.Schema({\n\tteamId: String,\n\tuserId: String,\t\n\tfromUserId: String,\n\tcreated: {type: Date, default: Date.now}\n});\n\nclass KarmaModel {\n\n\tstatic getUserPoints(teamId, userId){\n\t\treturn this.find({ teamId, userId });\n\t}\n\t\n\tstatic getTeamPoints(teamId){\n\t\t\n\t\treturn new Promise((res,rej) =>{\n\t\t\t\n\t\t\tthis.aggregate([\n\t\t\t    {\n\t\t\t\t\t$match: {teamId}\n\t\t\t\t},{\n\t\t\t\t    $group : {\n\t\t\t\t\t\t_id: '$userId',\n\t\t\t\t\t\tcount: { $sum: 1 }\n\t\t\t\t    }\n\t\t\t\t},\n\t\t\t\t{ \n\t\t\t\t\t\"$sort\": { \n\t\t\t\t\t\t\"count\": -1 \n\t\t\t\t\t} \n\t\t\t\t},\n\t\t\t], function(err, collection){\n\t\t\t\tres(collection);\n\t\t\t});\n\t\t\t\t\n\t\t\t\n\t\t});\n\t}\n\t\n\tstatic deleteLatestPoint(teamId, userId, fromUserId){\n\t\treturn this.findOneAndRemove({ teamId, userId, fromUserId }, \n\t\t{sort: {created: 'asc'}});\n\t}\n}\n\nkarmaSchema.plugin(LoadClass, KarmaModel);\n\nexport default Mongoose.model('Karma', karmaSchema);"],"sourceRoot":"/home/checkroth/Documents/Projects/KarmaSlack/es6"}