{"version":3,"sources":["karma.model.js"],"names":[],"mappings":";;;;;;;;;;;;wBAAqB,UAAU;;;;oCACT,wBAAwB;;;;AAE9C,IAAI,WAAW,GAAG,sBAAS,MAAM,CAAC;AACjC,OAAM,EAAE,MAAM;AACd,OAAM,EAAE,MAAM;AACd,WAAU,EAAE,MAAM;AAClB,QAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAE,WAAS,IAAI,CAAC,GAAG,EAAC;CACxC,CAAC,CAAC;;IAEG,UAAU;UAAV,UAAU;wBAAV,UAAU;;;cAAV,UAAU;;SAEK,uBAAC,MAAM,EAAE,MAAM,EAAC;AACnC,UAAO,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,EAAN,MAAM,EAAE,MAAM,EAAN,MAAM,EAAE,CAAC,CAAC;GACrC;;;SAEmB,uBAAC,MAAM,EAAC;;;AAE3B,UAAO,IAAI,OAAO,CAAC,UAAC,GAAG,EAAC,GAAG,EAAI;;AAE9B,UAAK,SAAS,CAAC,CACX;AACF,WAAM,EAAE,EAAC,MAAM,EAAN,MAAM,EAAC;KAChB,EAAC;AACE,WAAM,EAAG;AACX,SAAG,EAAE,SAAS;AACd,WAAK,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE;MACf;KACJ,CACD,EAAE,UAAS,GAAG,EAAE,UAAU,EAAC;AAC3B,QAAG,CAAC,UAAU,CAAC,CAAC;KAChB,CAAC,CAAC;IAGH,CAAC,CAAC;GACH;;;SAEuB,2BAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAC;AACnD,UAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE,MAAM,EAAN,MAAM,EAAE,MAAM,EAAN,MAAM,EAAE,UAAU,EAAV,UAAU,EAAE,EAC3D,EAAC,IAAI,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC,EAAC,CAAC,CAAC;GAC1B;;;QA9BI,UAAU;;;;;;;;;AAsChB,WAAW,CAAC,MAAM,oCAAY,UAAU,CAAC,CAAC;;qBAE3B,sBAAS,KAAK,CAAC,OAAO,EAAE,WAAW,CAAC","file":"karma.model.js","sourcesContent":["import Mongoose from 'mongoose';\r\nimport LoadClass from 'mongoose-class-wrapper';\r\n\r\nvar karmaSchema = Mongoose.Schema({\r\n\tteamId: String,\r\n\tuserId: String,\t\r\n\tfromUserId: String,\r\n\tcreated: {type: Date, default: Date.now}\r\n});\r\n\r\nclass KarmaModel {\r\n\r\n\tstatic getUserPoints(teamId, userId){\r\n\t\treturn this.find({ teamId, userId });\r\n\t}\r\n\t\r\n\tstatic getTeamPoints(teamId){\r\n\t\t\r\n\t\treturn new Promise((res,rej) =>{\r\n\t\t\t\r\n\t\t\tthis.aggregate([\r\n\t\t\t    {\r\n\t\t\t\t\t$match: {teamId}\r\n\t\t\t\t},{\r\n\t\t\t\t    $group : {\r\n\t\t\t\t\t\t_id: '$userId',\r\n\t\t\t\t\t\tcount: { $sum: 1 }\r\n\t\t\t\t    }\r\n\t\t\t\t}\r\n\t\t\t], function(err, collection){\r\n\t\t\t\tres(collection);\r\n\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t});\r\n\t}\r\n\t\r\n\tstatic deleteLatestPoint(teamId, userId, fromUserId){\r\n\t\treturn this.findOneAndRemove({ teamId, userId, fromUserId }, \r\n\t\t{sort: {created: 'asc'}});\r\n\t}\r\n}\r\n/*\r\nschema.statics.nameContains = function(name, cb){\r\n\treturn this.find({name: new RegExp(name, 'i')}, cb);\t\r\n};\r\n*/\r\n\r\nkarmaSchema.plugin(LoadClass, KarmaModel);\r\n\r\nexport default Mongoose.model('Karma', karmaSchema);"],"sourceRoot":"D:\\Projects\\karma\\warm-sea-8289\\es6"}