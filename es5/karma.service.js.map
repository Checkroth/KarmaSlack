{"version":3,"sources":["karma.service.js"],"names":[],"mappings":"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","file":"karma.service.js","sourcesContent":["import KarmaModel from '../es5/karma.model.js'; \r\n\r\nexport default class KarmaService {\r\n\t\r\n\tconstructor() {\r\n\t\t\r\n\t}\r\n\t\r\n\t//Add Karma record\r\n\t\r\n\tadd(teamId, userId, fromUserId){\t\t\r\n\r\n\t\treturn new Promise((res,rej) =>{\r\n\t\t\t\r\n\t\t\tKarmaModel.create({\r\n\t\t\t\t\"teamId\": teamId,\r\n\t\t\t\t\"userId\": userId,\r\n\t\t\t\t\"fromUserId\": fromUserId\r\n\t\t\t})\r\n\t\t\t.then(() => {\t\t\r\n\t\t\t\treturn this.userCount(teamId, userId, \"increased\")\r\n\t\t\t\t\t\t.then((data) => res(data));\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n\t//Remove Karma record\r\n\t\r\n\tremove(teamId, userId, fromUserId){\r\n\t\t\r\n\t\treturn new Promise((res,rej) =>{\r\n\t\t\t\r\n\t\t\tif(userId === fromUserId){\t\t\r\n\t\t\t\treturn fromSelf()\r\n\t\t\t\t\t\t.then((data)=> res(data));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn KarmaModel.deleteLatestPoint(teamId, userId, fromUserId)\t\r\n\t\t\t.then((entity) => {\r\n\t\t\t\tif(!entity){\r\n\t\t\t\t\treturn whenNoRecordFound(userId)\r\n\t\t\t\t\t\t\t.then((data)=> res(data));\r\n\t\t\t\t}\t\t\r\n\t\t\t\treturn this.userCount(teamId, userId, \"decreased\")\r\n\t\t\t\t\t\t.then((data) => res(data));\r\n\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t\tfunction whenNoRecordFound (userId){\r\n\t  \r\n\t\t\treturn Promise.resolve(`${userId} needs some positive karma from you first.`);\r\n\t\t};\r\n\t\t\r\n\t\tfunction fromSelf (){\r\n\t\t  \r\n\t\t\treturn Promise.resolve(`Don't be so hard on yourself.`);\r\n\t\t};\r\n\t}\r\n\t\r\n\t//Get Karma count for user\r\n\t\r\n\tuserCount(teamId, userId, incDec){\r\n  \r\n\t\treturn new Promise((res,rej) =>{\r\n\t\t\tKarmaModel.getUserPoints(teamId, userId)\r\n\t\t\t.then((collection) => {\r\n\t\t\t\tvar responseText = `<@${userId}> has a karma of ${collection.length}.`; \t\t \r\n\t\t\r\n\t\t\t\tif(incDec){\r\n\t\t\t\t\tresponseText = `<@${userId}>s karma has ${incDec} to ${collection.length}.`;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tres(responseText);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n\t//Get Karma count for team\r\n\r\n\tteamCount(teamId){\r\n\t\t\r\n\t\treturn new Promise((res,rej) =>{\r\n\t\t\tKarmaModel.getTeamPoints(teamId)\r\n\t\t\t.then((collection) => {\r\n\t\t\t\t\r\n\t\t\t\tvar responseText = 'Karma Totals: \\n';\r\n\t\t\t\t\r\n\t\t\t\tfor (let user = 0, len = collection.length; user < len; user++) {\r\n\t\t\t\t\tlet element = collection[user];\r\n\t\t\t\t\tresponseText += ` ${element._id} has a karma of ${element.count}. \\n`;\r\n\t\t\t\t}\r\n\t\t\t\tres(responseText);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}"],"sourceRoot":"D:\\Projects\\karma\\warm-sea-8289\\es6"}